<keyword> class </keyword>
<identifier>
	<name> Square </name>
</identifier>
<symbol> { </symbol>
<keyword> field </keyword>
<keyword> int </keyword>
<identifier>
	<name> x </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 0 </index>
</identifier>
<symbol> , </symbol>
<identifier>
	<name> y </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 1 </index>
</identifier>
<symbol> ; </symbol>
<keyword> field </keyword>
<keyword> int </keyword>
<identifier>
	<name> size </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 2 </index>
</identifier>
<symbol> ; </symbol>
<keyword> constructor </keyword>
<identifier>
	<name> Square </name>
</identifier>
<identifier>
	<name> new </name>
</identifier>
<symbol> ( </symbol>
<parameterList>
<keyword> int </keyword>
<identifier>
	<name> Ax </name>
	<type> int </type>
	<kind> ARG </kind>
	<index> 0 </index>
</identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier>
	<name> Ay </name>
	<type> int </type>
	<kind> ARG </kind>
	<index> 1 </index>
</identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier>
	<name> Asize </name>
	<type> int </type>
	<kind> ARG </kind>
	<index> 2 </index>
</identifier>
</parameterList>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> let </keyword>
<identifier>
	<name> x </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 0 </index>
</identifier>
<symbol> = </symbol>
<identifier>
	<name> Ax </name>
	<type> int </type>
	<kind> ARG </kind>
	<index> 0 </index>
</identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier>
	<name> y </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 1 </index>
</identifier>
<symbol> = </symbol>
<identifier>
	<name> Ay </name>
	<type> int </type>
	<kind> ARG </kind>
	<index> 1 </index>
</identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier>
	<name> size </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 2 </index>
</identifier>
<symbol> = </symbol>
<identifier>
	<name> Asize </name>
	<type> int </type>
	<kind> ARG </kind>
	<index> 2 </index>
</identifier>
<symbol> ; </symbol>
<doStatement>
<keyword> do </keyword>
<identifier>
	<name> draw </name>
</identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<keyword> return </keyword>
<keyword> this </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> method </keyword>
<keyword> void </keyword>
<identifier>
	<name> dispose </name>
</identifier>
<symbol> ( </symbol>
<parameterList>
</parameterList>
<symbol> ) </symbol>
<symbol> { </symbol>
<doStatement>
<keyword> do </keyword>
<identifier>
	<name> Memory </name>
</identifier>
<symbol> . </symbol>
<identifier>
	<name> deAlloc </name>
</identifier>
<symbol> ( </symbol>
<keyword> this </keyword>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> method </keyword>
<keyword> void </keyword>
<identifier>
	<name> draw </name>
</identifier>
<symbol> ( </symbol>
<parameterList>
</parameterList>
<symbol> ) </symbol>
<symbol> { </symbol>
<doStatement>
<keyword> do </keyword>
<identifier>
	<name> Screen </name>
</identifier>
<symbol> . </symbol>
<identifier>
	<name> setColor </name>
</identifier>
<symbol> ( </symbol>
<keyword> true </keyword>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<doStatement>
<keyword> do </keyword>
<identifier>
	<name> Screen </name>
</identifier>
<symbol> . </symbol>
<identifier>
	<name> drawRectangle </name>
</identifier>
<symbol> ( </symbol>
<identifier>
	<name> x </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 0 </index>
</identifier>
<symbol> , </symbol>
<identifier>
	<name> y </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 1 </index>
</identifier>
<symbol> , </symbol>
<identifier>
	<name> x </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 0 </index>
</identifier>
<symbol> + </symbol>
<identifier>
	<name> size </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 2 </index>
</identifier>
<symbol> , </symbol>
<identifier>
	<name> y </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 1 </index>
</identifier>
<symbol> + </symbol>
<identifier>
	<name> size </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 2 </index>
</identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> method </keyword>
<keyword> void </keyword>
<identifier>
	<name> erase </name>
</identifier>
<symbol> ( </symbol>
<parameterList>
</parameterList>
<symbol> ) </symbol>
<symbol> { </symbol>
<doStatement>
<keyword> do </keyword>
<identifier>
	<name> Screen </name>
</identifier>
<symbol> . </symbol>
<identifier>
	<name> setColor </name>
</identifier>
<symbol> ( </symbol>
<keyword> false </keyword>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<doStatement>
<keyword> do </keyword>
<identifier>
	<name> Screen </name>
</identifier>
<symbol> . </symbol>
<identifier>
	<name> drawRectangle </name>
</identifier>
<symbol> ( </symbol>
<identifier>
	<name> x </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 0 </index>
</identifier>
<symbol> , </symbol>
<identifier>
	<name> y </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 1 </index>
</identifier>
<symbol> , </symbol>
<identifier>
	<name> x </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 0 </index>
</identifier>
<symbol> + </symbol>
<identifier>
	<name> size </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 2 </index>
</identifier>
<symbol> , </symbol>
<identifier>
	<name> y </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 1 </index>
</identifier>
<symbol> + </symbol>
<identifier>
	<name> size </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 2 </index>
</identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> method </keyword>
<keyword> void </keyword>
<identifier>
	<name> incSize </name>
</identifier>
<symbol> ( </symbol>
<parameterList>
</parameterList>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> if </keyword>
<symbol> ( </symbol>
<symbol> ( </symbol>
<symbol> ( </symbol>
<identifier>
	<name> y </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 1 </index>
</identifier>
<symbol> + </symbol>
<identifier>
	<name> size </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 2 </index>
</identifier>
<symbol> ) </symbol>
<symbol> &lt; </symbol>
<integerConstant> 254 </integerConstant>
<symbol> ) </symbol>
<symbol> &amp; </symbol>
<symbol> ( </symbol>
<symbol> ( </symbol>
<identifier>
	<name> x </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 0 </index>
</identifier>
<symbol> + </symbol>
<identifier>
	<name> size </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 2 </index>
</identifier>
<symbol> ) </symbol>
<symbol> &lt; </symbol>
<integerConstant> 510 </integerConstant>
<symbol> ) </symbol>
<symbol> ) </symbol>
<symbol> { </symbol>
<doStatement>
<keyword> do </keyword>
<identifier>
	<name> erase </name>
</identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<keyword> let </keyword>
<identifier>
	<name> size </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 2 </index>
</identifier>
<symbol> = </symbol>
<identifier>
	<name> size </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 2 </index>
</identifier>
<symbol> + </symbol>
<integerConstant> 2 </integerConstant>
<symbol> ; </symbol>
<doStatement>
<keyword> do </keyword>
<identifier>
	<name> draw </name>
</identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<symbol> } </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> method </keyword>
<keyword> void </keyword>
<identifier>
	<name> decSize </name>
</identifier>
<symbol> ( </symbol>
<parameterList>
</parameterList>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> if </keyword>
<symbol> ( </symbol>
<identifier>
	<name> size </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 2 </index>
</identifier>
<symbol> &gt; </symbol>
<integerConstant> 2 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<doStatement>
<keyword> do </keyword>
<identifier>
	<name> erase </name>
</identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<keyword> let </keyword>
<identifier>
	<name> size </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 2 </index>
</identifier>
<symbol> = </symbol>
<identifier>
	<name> size </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 2 </index>
</identifier>
<symbol> - </symbol>
<integerConstant> 2 </integerConstant>
<symbol> ; </symbol>
<doStatement>
<keyword> do </keyword>
<identifier>
	<name> draw </name>
</identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<symbol> } </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> method </keyword>
<keyword> void </keyword>
<identifier>
	<name> moveUp </name>
</identifier>
<symbol> ( </symbol>
<parameterList>
</parameterList>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> if </keyword>
<symbol> ( </symbol>
<identifier>
	<name> y </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 1 </index>
</identifier>
<symbol> &gt; </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<doStatement>
<keyword> do </keyword>
<identifier>
	<name> Screen </name>
</identifier>
<symbol> . </symbol>
<identifier>
	<name> setColor </name>
</identifier>
<symbol> ( </symbol>
<keyword> false </keyword>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<doStatement>
<keyword> do </keyword>
<identifier>
	<name> Screen </name>
</identifier>
<symbol> . </symbol>
<identifier>
	<name> drawRectangle </name>
</identifier>
<symbol> ( </symbol>
<identifier>
	<name> x </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 0 </index>
</identifier>
<symbol> , </symbol>
<symbol> ( </symbol>
<identifier>
	<name> y </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 1 </index>
</identifier>
<symbol> + </symbol>
<identifier>
	<name> size </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 2 </index>
</identifier>
<symbol> ) </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> , </symbol>
<identifier>
	<name> x </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 0 </index>
</identifier>
<symbol> + </symbol>
<identifier>
	<name> size </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 2 </index>
</identifier>
<symbol> , </symbol>
<identifier>
	<name> y </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 1 </index>
</identifier>
<symbol> + </symbol>
<identifier>
	<name> size </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 2 </index>
</identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<keyword> let </keyword>
<identifier>
	<name> y </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 1 </index>
</identifier>
<symbol> = </symbol>
<identifier>
	<name> y </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 1 </index>
</identifier>
<symbol> - </symbol>
<integerConstant> 2 </integerConstant>
<symbol> ; </symbol>
<doStatement>
<keyword> do </keyword>
<identifier>
	<name> Screen </name>
</identifier>
<symbol> . </symbol>
<identifier>
	<name> setColor </name>
</identifier>
<symbol> ( </symbol>
<keyword> true </keyword>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<doStatement>
<keyword> do </keyword>
<identifier>
	<name> Screen </name>
</identifier>
<symbol> . </symbol>
<identifier>
	<name> drawRectangle </name>
</identifier>
<symbol> ( </symbol>
<identifier>
	<name> x </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 0 </index>
</identifier>
<symbol> , </symbol>
<identifier>
	<name> y </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 1 </index>
</identifier>
<symbol> , </symbol>
<identifier>
	<name> x </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 0 </index>
</identifier>
<symbol> + </symbol>
<identifier>
	<name> size </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 2 </index>
</identifier>
<symbol> , </symbol>
<identifier>
	<name> y </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 1 </index>
</identifier>
<symbol> + </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<symbol> } </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> method </keyword>
<keyword> void </keyword>
<identifier>
	<name> moveDown </name>
</identifier>
<symbol> ( </symbol>
<parameterList>
</parameterList>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> if </keyword>
<symbol> ( </symbol>
<symbol> ( </symbol>
<identifier>
	<name> y </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 1 </index>
</identifier>
<symbol> + </symbol>
<identifier>
	<name> size </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 2 </index>
</identifier>
<symbol> ) </symbol>
<symbol> &lt; </symbol>
<integerConstant> 254 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<doStatement>
<keyword> do </keyword>
<identifier>
	<name> Screen </name>
</identifier>
<symbol> . </symbol>
<identifier>
	<name> setColor </name>
</identifier>
<symbol> ( </symbol>
<keyword> false </keyword>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<doStatement>
<keyword> do </keyword>
<identifier>
	<name> Screen </name>
</identifier>
<symbol> . </symbol>
<identifier>
	<name> drawRectangle </name>
</identifier>
<symbol> ( </symbol>
<identifier>
	<name> x </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 0 </index>
</identifier>
<symbol> , </symbol>
<identifier>
	<name> y </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 1 </index>
</identifier>
<symbol> , </symbol>
<identifier>
	<name> x </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 0 </index>
</identifier>
<symbol> + </symbol>
<identifier>
	<name> size </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 2 </index>
</identifier>
<symbol> , </symbol>
<identifier>
	<name> y </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 1 </index>
</identifier>
<symbol> + </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<keyword> let </keyword>
<identifier>
	<name> y </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 1 </index>
</identifier>
<symbol> = </symbol>
<identifier>
	<name> y </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 1 </index>
</identifier>
<symbol> + </symbol>
<integerConstant> 2 </integerConstant>
<symbol> ; </symbol>
<doStatement>
<keyword> do </keyword>
<identifier>
	<name> Screen </name>
</identifier>
<symbol> . </symbol>
<identifier>
	<name> setColor </name>
</identifier>
<symbol> ( </symbol>
<keyword> true </keyword>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<doStatement>
<keyword> do </keyword>
<identifier>
	<name> Screen </name>
</identifier>
<symbol> . </symbol>
<identifier>
	<name> drawRectangle </name>
</identifier>
<symbol> ( </symbol>
<identifier>
	<name> x </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 0 </index>
</identifier>
<symbol> , </symbol>
<symbol> ( </symbol>
<identifier>
	<name> y </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 1 </index>
</identifier>
<symbol> + </symbol>
<identifier>
	<name> size </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 2 </index>
</identifier>
<symbol> ) </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> , </symbol>
<identifier>
	<name> x </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 0 </index>
</identifier>
<symbol> + </symbol>
<identifier>
	<name> size </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 2 </index>
</identifier>
<symbol> , </symbol>
<identifier>
	<name> y </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 1 </index>
</identifier>
<symbol> + </symbol>
<identifier>
	<name> size </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 2 </index>
</identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<symbol> } </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> method </keyword>
<keyword> void </keyword>
<identifier>
	<name> moveLeft </name>
</identifier>
<symbol> ( </symbol>
<parameterList>
</parameterList>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> if </keyword>
<symbol> ( </symbol>
<identifier>
	<name> x </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 0 </index>
</identifier>
<symbol> &gt; </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<doStatement>
<keyword> do </keyword>
<identifier>
	<name> Screen </name>
</identifier>
<symbol> . </symbol>
<identifier>
	<name> setColor </name>
</identifier>
<symbol> ( </symbol>
<keyword> false </keyword>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<doStatement>
<keyword> do </keyword>
<identifier>
	<name> Screen </name>
</identifier>
<symbol> . </symbol>
<identifier>
	<name> drawRectangle </name>
</identifier>
<symbol> ( </symbol>
<symbol> ( </symbol>
<identifier>
	<name> x </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 0 </index>
</identifier>
<symbol> + </symbol>
<identifier>
	<name> size </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 2 </index>
</identifier>
<symbol> ) </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> , </symbol>
<identifier>
	<name> y </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 1 </index>
</identifier>
<symbol> , </symbol>
<identifier>
	<name> x </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 0 </index>
</identifier>
<symbol> + </symbol>
<identifier>
	<name> size </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 2 </index>
</identifier>
<symbol> , </symbol>
<identifier>
	<name> y </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 1 </index>
</identifier>
<symbol> + </symbol>
<identifier>
	<name> size </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 2 </index>
</identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<keyword> let </keyword>
<identifier>
	<name> x </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 0 </index>
</identifier>
<symbol> = </symbol>
<identifier>
	<name> x </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 0 </index>
</identifier>
<symbol> - </symbol>
<integerConstant> 2 </integerConstant>
<symbol> ; </symbol>
<doStatement>
<keyword> do </keyword>
<identifier>
	<name> Screen </name>
</identifier>
<symbol> . </symbol>
<identifier>
	<name> setColor </name>
</identifier>
<symbol> ( </symbol>
<keyword> true </keyword>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<doStatement>
<keyword> do </keyword>
<identifier>
	<name> Screen </name>
</identifier>
<symbol> . </symbol>
<identifier>
	<name> drawRectangle </name>
</identifier>
<symbol> ( </symbol>
<identifier>
	<name> x </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 0 </index>
</identifier>
<symbol> , </symbol>
<identifier>
	<name> y </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 1 </index>
</identifier>
<symbol> , </symbol>
<identifier>
	<name> x </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 0 </index>
</identifier>
<symbol> + </symbol>
<integerConstant> 1 </integerConstant>
<symbol> , </symbol>
<identifier>
	<name> y </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 1 </index>
</identifier>
<symbol> + </symbol>
<identifier>
	<name> size </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 2 </index>
</identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<symbol> } </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> method </keyword>
<keyword> void </keyword>
<identifier>
	<name> moveRight </name>
</identifier>
<symbol> ( </symbol>
<parameterList>
</parameterList>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> if </keyword>
<symbol> ( </symbol>
<symbol> ( </symbol>
<identifier>
	<name> x </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 0 </index>
</identifier>
<symbol> + </symbol>
<identifier>
	<name> size </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 2 </index>
</identifier>
<symbol> ) </symbol>
<symbol> &lt; </symbol>
<integerConstant> 510 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<doStatement>
<keyword> do </keyword>
<identifier>
	<name> Screen </name>
</identifier>
<symbol> . </symbol>
<identifier>
	<name> setColor </name>
</identifier>
<symbol> ( </symbol>
<keyword> false </keyword>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<doStatement>
<keyword> do </keyword>
<identifier>
	<name> Screen </name>
</identifier>
<symbol> . </symbol>
<identifier>
	<name> drawRectangle </name>
</identifier>
<symbol> ( </symbol>
<identifier>
	<name> x </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 0 </index>
</identifier>
<symbol> , </symbol>
<identifier>
	<name> y </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 1 </index>
</identifier>
<symbol> , </symbol>
<identifier>
	<name> x </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 0 </index>
</identifier>
<symbol> + </symbol>
<integerConstant> 1 </integerConstant>
<symbol> , </symbol>
<identifier>
	<name> y </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 1 </index>
</identifier>
<symbol> + </symbol>
<identifier>
	<name> size </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 2 </index>
</identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<keyword> let </keyword>
<identifier>
	<name> x </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 0 </index>
</identifier>
<symbol> = </symbol>
<identifier>
	<name> x </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 0 </index>
</identifier>
<symbol> + </symbol>
<integerConstant> 2 </integerConstant>
<symbol> ; </symbol>
<doStatement>
<keyword> do </keyword>
<identifier>
	<name> Screen </name>
</identifier>
<symbol> . </symbol>
<identifier>
	<name> setColor </name>
</identifier>
<symbol> ( </symbol>
<keyword> true </keyword>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<doStatement>
<keyword> do </keyword>
<identifier>
	<name> Screen </name>
</identifier>
<symbol> . </symbol>
<identifier>
	<name> drawRectangle </name>
</identifier>
<symbol> ( </symbol>
<symbol> ( </symbol>
<identifier>
	<name> x </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 0 </index>
</identifier>
<symbol> + </symbol>
<identifier>
	<name> size </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 2 </index>
</identifier>
<symbol> ) </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> , </symbol>
<identifier>
	<name> y </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 1 </index>
</identifier>
<symbol> , </symbol>
<identifier>
	<name> x </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 0 </index>
</identifier>
<symbol> + </symbol>
<identifier>
	<name> size </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 2 </index>
</identifier>
<symbol> , </symbol>
<identifier>
	<name> y </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 1 </index>
</identifier>
<symbol> + </symbol>
<identifier>
	<name> size </name>
	<type> int </type>
	<kind> FIELD </kind>
	<index> 2 </index>
</identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<symbol> } </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<symbol> } </symbol>
