function Ball.new 0
push constant 15
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 10
push argument 3
push constant 6
sub
pop this 11
push argument 4
pop this 12
push argument 5
push constant 6
sub
pop this 13
push constant 0
pop this 14
push pointer 0
call Ball.show 1
pop temp 0
push pointer 0
return
function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Ball.show 0
push argument 0
pop pointer 0
push constant 1
neg
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.hide 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.draw 0
push argument 0
pop pointer 0
push this 0
push this 1
push this 0
push constant 5
add
push this 1
push constant 5
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Ball.getLeft 0
push argument 0
pop pointer 0
push this 0
return
function Ball.getRight 0
push argument 0
pop pointer 0
push this 0
push constant 5
add
return
function Ball.setDestination 3
push argument 0
pop pointer 0
push argument 1
push this 0
sub
pop this 2
push argument 2
push this 1
sub
pop this 3
push this 2
call Math.abs 1
pop local 0
push this 3
call Math.abs 1
pop local 1
push local 0
push local 1
lt
pop this 7
push this 7
if-goto IF_TRUE_704
goto IF_FALSE_704
label IF_TRUE_704
push local 0
pop local 2
push local 1
pop local 0
push local 2
pop local 1
push this 1
push argument 2
lt
pop this 8
push this 0
push argument 1
lt
pop this 9
goto IF_END_704
label IF_FALSE_704
push this 0
push argument 1
lt
pop this 8
push this 1
push argument 2
lt
pop this 9
label IF_END_704
push constant 2
push local 1
call Math.multiply 2
push local 0
sub
pop this 4
push constant 2
push local 1
call Math.multiply 2
pop this 5
push constant 2
push local 1
push local 0
sub
call Math.multiply 2
pop this 6
push constant 0
return
function Ball.move 0
push argument 0
pop pointer 0
push pointer 0
call Ball.hide 1
pop temp 0
push this 4
push constant 0
lt
if-goto IF_TRUE_58b
goto IF_FALSE_58b
label IF_TRUE_58b
push this 4
push this 5
add
pop this 4
goto IF_END_58b
label IF_FALSE_58b
push this 4
push this 6
add
pop this 4
push this 9
if-goto IF_TRUE_904
goto IF_FALSE_904
label IF_TRUE_904
push this 7
if-goto IF_TRUE_01f
goto IF_FALSE_01f
label IF_TRUE_01f
push this 0
push constant 4
add
pop this 0
goto IF_END_01f
label IF_FALSE_01f
push this 1
push constant 4
add
pop this 1
label IF_END_01f
goto IF_END_904
label IF_FALSE_904
push this 7
if-goto IF_TRUE_d23
goto IF_FALSE_d23
label IF_TRUE_d23
push this 0
push constant 4
sub
pop this 0
goto IF_END_d23
label IF_FALSE_d23
push this 1
push constant 4
sub
pop this 1
label IF_END_d23
label IF_END_904
label IF_END_58b
push this 8
if-goto IF_TRUE_f16
goto IF_FALSE_f16
label IF_TRUE_f16
push this 7
if-goto IF_TRUE_f6f
goto IF_FALSE_f6f
label IF_TRUE_f6f
push this 1
push constant 4
add
pop this 1
goto IF_END_f6f
label IF_FALSE_f6f
push this 0
push constant 4
add
pop this 0
label IF_END_f6f
goto IF_END_f16
label IF_FALSE_f16
push this 7
if-goto IF_TRUE_55c
goto IF_FALSE_55c
label IF_TRUE_55c
push this 1
push constant 4
sub
pop this 1
goto IF_END_55c
label IF_FALSE_55c
push this 0
push constant 4
sub
pop this 0
label IF_END_55c
label IF_END_f16
push this 0
push this 10
gt
not
if-goto IF_TRUE_214
goto IF_FALSE_214
label IF_TRUE_214
push constant 1
pop this 14
push this 10
pop this 0
label IF_FALSE_214
push this 0
push this 11
lt
not
if-goto IF_TRUE_f93
goto IF_FALSE_f93
label IF_TRUE_f93
push constant 2
pop this 14
push this 11
pop this 0
label IF_FALSE_f93
push this 1
push this 12
gt
not
if-goto IF_TRUE_0de
goto IF_FALSE_0de
label IF_TRUE_0de
push constant 3
pop this 14
push this 12
pop this 1
label IF_FALSE_0de
push this 1
push this 13
lt
not
if-goto IF_TRUE_96e
goto IF_FALSE_96e
label IF_TRUE_96e
push constant 4
pop this 14
push this 13
pop this 1
label IF_FALSE_96e
push pointer 0
call Ball.show 1
pop temp 0
push this 14
return
function Ball.bounce 5
push argument 0
pop pointer 0
push this 2
push constant 10
call Math.divide 2
pop local 2
push this 3
push constant 10
call Math.divide 2
pop local 3
push argument 1
push constant 0
eq
if-goto IF_TRUE_2b8
goto IF_FALSE_2b8
label IF_TRUE_2b8
push constant 10
pop local 4
goto IF_END_2b8
label IF_FALSE_2b8
push this 2
push constant 0
lt
not
push argument 1
push constant 1
eq
and
push this 2
push constant 0
lt
push argument 1
push constant 1
neg
eq
and
or
if-goto IF_TRUE_e79
goto IF_FALSE_e79
label IF_TRUE_e79
push constant 20
pop local 4
goto IF_END_e79
label IF_FALSE_e79
push constant 5
pop local 4
label IF_END_e79
label IF_END_2b8
push this 14
push constant 1
eq
if-goto IF_TRUE_657
goto IF_FALSE_657
label IF_TRUE_657
push constant 506
pop local 0
push local 3
push constant 50
neg
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
goto IF_END_657
label IF_FALSE_657
push this 14
push constant 2
eq
if-goto IF_TRUE_9ec
goto IF_FALSE_9ec
label IF_TRUE_9ec
push constant 0
pop local 0
push local 3
push constant 50
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
goto IF_END_9ec
label IF_FALSE_9ec
push this 14
push constant 3
eq
if-goto IF_TRUE_8bd
goto IF_FALSE_8bd
label IF_TRUE_8bd
push constant 250
pop local 1
push local 2
push constant 25
neg
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
goto IF_END_8bd
label IF_FALSE_8bd
push constant 0
pop local 1
push local 2
push constant 25
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
label IF_END_8bd
label IF_END_9ec
label IF_END_657
push pointer 0
push local 0
push local 1
call Ball.setDestination 3
pop temp 0
push constant 0
return
