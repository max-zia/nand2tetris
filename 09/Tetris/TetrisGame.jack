/** Represents a Tetris game. */

class TetrisGame {

	field Block currentBlock;
	field Block nextBlock;
	field boolean exit; 		// true when the game is over

	/** Constructs a new Tetris game. */
	constructor TetrisGame new() {
		let exit = false;
		return this;
	}

	/** Deallocates the TetrisGame's memory. */
	method void dispose() {
		do currentBlock.dispose();
		do nextBlock.dispose();
		do Memory.deAlloc(this);
		return;
	}

	/** Draws the board (10 cols, 20 rows of size 12). */
	method void drawBoard() {
		do Screen.drawLine(157, 6, 281, 6);
		do Screen.drawLine(157, 6, 157, 250);
		do Screen.drawLine(157, 250, 281, 250);
		do Screen.drawLine(281, 6, 281, 250);

		return;
	}

	/** Checks what key was pressed and responds appropriately. */
	method void checkKey(char aKey) {
		var char key;
		let key = aKey; 

		if (key = 130) { 							// left arrow
			do currentBlock.setDirection(1); 
			do currentBlock.move();
		}
		if (key = 132) { 							// right arrow
			do currentBlock.setDirection(2);
			do currentBlock.move();
		}
		if (key = 82) { 							// r key
			do currentBlock.rotate(); 
		}
		if (key = 81) { let exit = true; }			// q key

		return;
	}


	/** Starts the game and handle's inputs that control movement direction. */
	method void run() {
		var char key;
		var int i;
		var boolean atBottom;

		do drawBoard();

		let atBottom = false;

		let currentBlock = Block.new(10, 160, 9);
		let nextBlock = Block.new(10, 160, 9);

		while (~exit) {

			while (~atBottom) {

				let atBottom = currentBlock.atBottom();

				if (~(currentBlock.obstructionCheck())) {
					do currentBlock.descend();
				}
				else {
					let atBottom = true;
				}

				let i = 0;
				// waits for a key to be pressed
				while (i < 1000) {
					let key = Keyboard.keyPressed();
					let i = i + 1;

					if (~(key = 0)) {
						let i = 1000;
					}
				}

				do checkKey(key);
				let key = 0;

				do Sys.wait(50);
			}

			let currentBlock = nextBlock;
			let nextBlock = Block.new(10, 160, 9);
			let atBottom = false;
		}

		if (exit) {
            do Output.moveCursor(10,27);
	        do Output.printString("Game Over");
    	} 

		return;
	}
}